name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Allows manual triggering

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"] # Specify the Python version

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Lint with Ruff
      run: |
        poetry run ruff check .
        poetry run ruff format --check .

    # If you use pylint, uncomment the following step
    # - name: Lint with Pylint
    #   run: |
    #     poetry run pylint enginepy tests

    - name: Run tests with Pytest
      run: |
        make test # Assumes 'make test' runs pytest via poetry run pytest
